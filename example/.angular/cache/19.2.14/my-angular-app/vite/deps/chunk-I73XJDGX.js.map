{
  "version": 3,
  "sources": ["../../../../../../node_modules/@wharfkit/session/lib/session.m.js"],
  "sourcesContent": ["import { ChainDefinition, Logo } from '@wharfkit/common';\nexport * from '@wharfkit/common';\nimport { APIClient, FetchProvider, Serializer, Action, PermissionLevel, SignedTransaction, Transaction, Name, Struct, Checksum256 } from '@wharfkit/antelope';\nexport * from '@wharfkit/antelope';\nimport zlib from 'pako';\nimport { RequestDataV2, RequestDataV3, RequestSignature, SigningRequest, ResolvedSigningRequest, ChainId } from '@wharfkit/signing-request';\nexport * from '@wharfkit/signing-request';\nimport { ABICache } from '@wharfkit/abicache';\nexport * from '@wharfkit/abicache';\nimport { __decorate } from 'tslib';\nvar LoginHookTypes;\n(function (LoginHookTypes) {\n  LoginHookTypes[\"beforeLogin\"] = \"beforeLogin\";\n  LoginHookTypes[\"afterLogin\"] = \"afterLogin\";\n})(LoginHookTypes || (LoginHookTypes = {}));\nclass LoginContext {\n  constructor(options) {\n    this.arbitrary = {};\n    this.chains = [];\n    this.hooks = {\n      afterLogin: [],\n      beforeLogin: []\n    };\n    this.uiRequirements = {\n      requiresChainSelect: true,\n      requiresPermissionSelect: true,\n      requiresPermissionEntry: false,\n      requiresWalletSelect: true\n    };\n    this.walletPlugins = [];\n    this.appName = String(options.appName);\n    if (options.arbitrary) {\n      this.arbitrary = options.arbitrary;\n    }\n    if (options.chains) {\n      this.chains = options.chains;\n    }\n    if (options.chain) {\n      this.chain = options.chain;\n    }\n    this.fetch = options.fetch;\n    this.permissionLevel = options.permissionLevel;\n    this.walletPlugins = options.walletPlugins || [];\n    this.ui = options.ui;\n    options.loginPlugins?.forEach(plugin => {\n      plugin.register(this);\n    });\n  }\n  addHook(t, hook) {\n    this.hooks[t].push(hook);\n  }\n  getClient(chain) {\n    return new APIClient({\n      provider: new FetchProvider(chain.url, {\n        fetch: this.fetch\n      })\n    });\n  }\n  get esrOptions() {\n    return {\n      zlib\n    };\n  }\n}\nclass AbstractLoginPlugin {}\nclass BaseLoginPlugin extends AbstractLoginPlugin {\n  register() {}\n}\nvar TransactHookTypes;\n(function (TransactHookTypes) {\n  TransactHookTypes[\"beforeSign\"] = \"beforeSign\";\n  TransactHookTypes[\"afterSign\"] = \"afterSign\";\n  TransactHookTypes[\"afterBroadcast\"] = \"afterBroadcast\";\n})(TransactHookTypes || (TransactHookTypes = {}));\nclass TransactContext {\n  constructor(options) {\n    this.hooks = {\n      afterBroadcast: [],\n      afterSign: [],\n      beforeSign: []\n    };\n    this.abiCache = options.abiCache;\n    this.appName = String(options.appName);\n    this.chain = options.chain;\n    this.client = options.client;\n    this.createRequest = options.createRequest;\n    this.fetch = options.fetch;\n    this.permissionLevel = options.permissionLevel;\n    if (options.storage) {\n      this.storage = options.storage;\n    }\n    this.transactPluginsOptions = options.transactPluginsOptions || {};\n    this.ui = options.ui;\n    options.transactPlugins?.forEach(plugin => {\n      plugin.register(this);\n    });\n  }\n  get accountName() {\n    return this.permissionLevel.actor;\n  }\n  get permissionName() {\n    return this.permissionLevel.permission;\n  }\n  get esrOptions() {\n    return {\n      abiProvider: this.abiCache,\n      zlib\n    };\n  }\n  addHook(t, hook) {\n    switch (t) {\n      case TransactHookTypes.beforeSign:\n        {\n          this.hooks[t].push(hook);\n          break;\n        }\n      case TransactHookTypes.afterSign:\n      case TransactHookTypes.afterBroadcast:\n        {\n          this.hooks[t].push(hook);\n          break;\n        }\n    }\n  }\n  async getInfo() {\n    let info = this.info;\n    if (this.info) {\n      info = this.info;\n    } else {\n      this.info = info = await this.client.v1.chain.get_info();\n    }\n    return info;\n  }\n  async resolve(request, expireSeconds = 120) {\n    let resolveArgs = {\n      chainId: this.chain.id\n    };\n    if (request.requiresTapos()) {\n      const info = await this.getInfo();\n      const header = info.getTransactionHeader(expireSeconds);\n      resolveArgs = {\n        ...resolveArgs,\n        ...header\n      };\n    }\n    const abis = await request.fetchAbis(this.abiCache);\n    return request.resolve(abis, this.permissionLevel, resolveArgs);\n  }\n}\nclass TransactRevisions {\n  constructor(request) {\n    this.revisions = [];\n    this.addRevision({\n      request,\n      signatures: []\n    }, 'original', true);\n  }\n  addRevision(response, code, allowModify) {\n    let modified = false;\n    const previous = this.revisions[this.revisions.length - 1];\n    if (previous) {\n      modified = previous.response.request !== String(response.request);\n    }\n    this.revisions.push({\n      allowModify,\n      code: String(code),\n      modified,\n      response: {\n        request: String(response.request),\n        signatures: response.signatures ? Serializer.objectify(response.signatures) : []\n      }\n    });\n  }\n}\nclass AbstractTransactPlugin {}\nclass BaseTransactPlugin extends AbstractTransactPlugin {\n  get id() {\n    return 'base-transact-plugin';\n  }\n  register() {}\n}\nfunction getFetch(options) {\n  if (options && options.fetch) {\n    return options.fetch;\n  }\n  if (typeof window !== 'undefined' && window.fetch) {\n    return window.fetch.bind(window);\n  }\n  if (typeof global !== 'undefined' && global.fetch) {\n    return global.fetch.bind(global);\n  }\n  throw new Error('Missing fetch');\n}\nfunction appendAction(request, action) {\n  const newAction = Action.from(action);\n  const cloned = request.clone();\n  switch (cloned.data.req.variantName) {\n    case 'action':\n      {\n        cloned.data.req.value = [cloned.data.req.value, newAction];\n        cloned.data.req.variantIdx = 1;\n        break;\n      }\n    case 'action[]':\n      {\n        const array = cloned.data.req.value;\n        array.push(newAction);\n        cloned.data.req.value = array;\n        break;\n      }\n    case 'transaction':\n      {\n        const tx = cloned.data.req.value;\n        tx.actions.push(newAction);\n        cloned.data.req.value = tx;\n        break;\n      }\n    default:\n      {\n        throw new Error('unknown data req type');\n      }\n  }\n  return cloned;\n}\nfunction prependAction(request, action) {\n  const newAction = Action.from(action);\n  const cloned = request.clone();\n  switch (cloned.data.req.variantName) {\n    case 'action':\n      {\n        cloned.data.req.value = [newAction, cloned.data.req.value];\n        cloned.data.req.variantIdx = 1;\n        break;\n      }\n    case 'action[]':\n      {\n        const array = cloned.data.req.value;\n        array.unshift(newAction);\n        cloned.data.req.value = array;\n        break;\n      }\n    case 'transaction':\n      {\n        const tx = cloned.data.req.value;\n        tx.actions.unshift(newAction);\n        cloned.data.req.value = tx;\n        break;\n      }\n    default:\n      {\n        throw new Error('unknown data req type');\n      }\n  }\n  return cloned;\n}\nclass Session {\n  get data() {\n    return this._data;\n  }\n  set data(data) {\n    this._data = data;\n  }\n  constructor(args, options = {}) {\n    this.abis = [];\n    this.allowModify = true;\n    this.broadcast = true;\n    this.expireSeconds = 120;\n    this.transactPluginsOptions = {};\n    this._data = {};\n    this.serialize = () => {\n      const serializableData = {\n        chain: this.chain.id,\n        actor: this.permissionLevel.actor,\n        permission: this.permissionLevel.permission,\n        walletPlugin: {\n          id: this.walletPlugin.id,\n          data: this.walletPlugin.data\n        }\n      };\n      if (Object.keys(this._data).length > 0) {\n        serializableData.data = this.data;\n      }\n      return Serializer.objectify(serializableData);\n    };\n    this.chain = ChainDefinition.from(args.chain);\n    if (args.permissionLevel) {\n      this.permissionLevel = PermissionLevel.from(args.permissionLevel);\n    } else if (args.actor && args.permission) {\n      this.permissionLevel = PermissionLevel.from(`${args.actor}@${args.permission}`);\n    } else {\n      throw new Error('Either a permissionLevel or actor/permission must be provided when creating a new Session.');\n    }\n    this.walletPlugin = args.walletPlugin;\n    if (options.appName) {\n      this.appName = String(options.appName);\n    }\n    if (options.abis) {\n      this.abis = [...options.abis];\n    }\n    if (options.contracts) {\n      this.abis.push(...options.contracts.map(c => ({\n        account: c.account,\n        abi: c.abi\n      })));\n    }\n    if (options.allowModify !== undefined) {\n      this.allowModify = options.allowModify;\n    }\n    if (options.broadcast !== undefined) {\n      this.broadcast = options.broadcast;\n    }\n    if (options.expireSeconds) {\n      this.expireSeconds = options.expireSeconds;\n    }\n    if (options.fetch) {\n      this.fetch = options.fetch;\n    } else {\n      this.fetch = getFetch(options);\n    }\n    if (options.storage) {\n      this.storage = options.storage;\n    }\n    if (options.transactPlugins) {\n      this.transactPlugins = options.transactPlugins;\n    } else {\n      this.transactPlugins = [new BaseTransactPlugin()];\n    }\n    if (options.transactPluginsOptions) {\n      this.transactPluginsOptions = options.transactPluginsOptions;\n    }\n    if (options.abiCache) {\n      this.abiCache = options.abiCache;\n    } else {\n      this.abiCache = new ABICache(this.client);\n    }\n    if (options.ui) {\n      this.ui = options.ui;\n    }\n  }\n  get actor() {\n    return this.permissionLevel.actor;\n  }\n  get permission() {\n    return this.permissionLevel.permission;\n  }\n  get client() {\n    return new APIClient({\n      provider: new FetchProvider(this.chain.url, {\n        fetch: this.fetch\n      })\n    });\n  }\n  setEndpoint(url) {\n    this.chain.url = url;\n  }\n  upgradeTransaction(args) {\n    const anyArgs = args;\n    if (args.actions && (anyArgs.expiration || anyArgs.ref_block_num || anyArgs.ref_block_prefix || anyArgs.max_net_usage_words || anyArgs.max_cpu_usage_ms || anyArgs.delay_sec)) {\n      return args = {\n        transaction: {\n          expiration: '1970-01-01T00:00:00',\n          ref_block_num: 0,\n          ref_block_prefix: 0,\n          max_net_usage_words: 0,\n          max_cpu_usage_ms: 0,\n          delay_sec: 0,\n          ...anyArgs\n        }\n      };\n    }\n    if (args.context_free_actions || args.context_free_data) {\n      const actions = args.actions || [args.action];\n      delete args.action;\n      return {\n        transaction: {\n          expiration: '1970-01-01T00:00:00',\n          ref_block_num: 0,\n          ref_block_prefix: 0,\n          max_net_usage_words: 0,\n          max_cpu_usage_ms: 0,\n          delay_sec: 0,\n          context_free_actions: [],\n          context_free_data: [],\n          actions,\n          ...anyArgs\n        }\n      };\n    }\n    return args;\n  }\n  storageType(version) {\n    return version === 2 ? RequestDataV2 : RequestDataV3;\n  }\n  cloneRequest(request, abiCache) {\n    let signature;\n    if (request.signature) {\n      signature = RequestSignature.from(JSON.parse(JSON.stringify(request.signature)));\n    }\n    const RequestData = this.storageType(request.version);\n    const data = RequestData.from(JSON.parse(JSON.stringify(request.data)));\n    return new SigningRequest(request.version, data, zlib, abiCache, signature);\n  }\n  async createRequest(args, abiCache) {\n    let request;\n    const options = {\n      abiProvider: abiCache,\n      zlib\n    };\n    if (args.request && args.request instanceof SigningRequest) {\n      request = this.cloneRequest(args.request, abiCache);\n    } else if (args.request) {\n      request = SigningRequest.from(args.request, options);\n    } else {\n      args = this.upgradeTransaction(args);\n      request = await SigningRequest.create({\n        ...args,\n        chainId: this.chain.id\n      }, options);\n    }\n    request.setBroadcast(false);\n    return request;\n  }\n  async updateRequest(previous, modified, abiCache) {\n    const updatedRequest = this.cloneRequest(modified, abiCache);\n    const info = updatedRequest.getRawInfo();\n    previous.data.info.forEach(metadata => {\n      if (info[metadata.key]) {\n        console.warn(`During an updateRequest call, the previous request had already set the ` + `metadata key of \"${metadata.key}\" which will not be overwritten.`);\n      }\n      updatedRequest.setRawInfoKey(metadata.key, metadata.value);\n    });\n    return updatedRequest;\n  }\n  async transact(args, options) {\n    try {\n      const expireSeconds = options && options.expireSeconds ? options.expireSeconds : this.expireSeconds;\n      const willBroadcast = options && typeof options.broadcast !== 'undefined' ? options.broadcast : this.broadcast;\n      const abiCache = this.getMergedAbiCache(args, options);\n      const transactPlugins = options?.transactPlugins || this.transactPlugins;\n      const transactPluginsOptions = options?.transactPluginsOptions || this.transactPluginsOptions;\n      let allowModify = options && typeof options.allowModify !== 'undefined' ? options.allowModify : this.allowModify;\n      const context = new TransactContext({\n        abiCache,\n        appName: this.appName,\n        chain: this.chain,\n        client: this.client,\n        createRequest: a => this.createRequest(a, abiCache),\n        fetch: this.fetch,\n        permissionLevel: this.permissionLevel,\n        storage: this.storage,\n        transactPlugins,\n        transactPluginsOptions,\n        ui: this.ui\n      });\n      if (context.ui) {\n        await context.ui.onTransact();\n        for (const translation of transactPlugins.map(transactPlugin => this.getPluginTranslations(transactPlugin))) {\n          context.ui.addTranslations(translation);\n        }\n      }\n      let request = await this.createRequest(args, abiCache);\n      const result = {\n        chain: this.chain,\n        request,\n        resolved: undefined,\n        returns: [],\n        revisions: new TransactRevisions(request),\n        signatures: [],\n        signer: this.permissionLevel,\n        transaction: undefined\n      };\n      for (const hook of context.hooks.beforeSign) {\n        const response = await hook(request.clone(), context);\n        if (response) {\n          result.revisions.addRevision(response, String(hook), allowModify);\n          if (allowModify) {\n            request = await this.updateRequest(request, response.request, abiCache);\n          }\n          if (response.signatures) {\n            result.signatures = [...result.signatures, ...response.signatures];\n            allowModify = false;\n          }\n        }\n      }\n      result.request = request;\n      result.resolved = await context.resolve(request, expireSeconds);\n      result.transaction = result.resolved.resolvedTransaction;\n      if (context.ui) {\n        await context.ui.onSign();\n        context.ui.addTranslations(this.getPluginTranslations(this.walletPlugin));\n      }\n      const walletResponse = await this.walletPlugin.sign(result.resolved, context);\n      result.signatures.push(...walletResponse.signatures);\n      if (walletResponse.resolved) {\n        const {\n          resolved\n        } = walletResponse;\n        const requestWasModified = !result.resolved.transaction.equals(resolved.transaction);\n        if (requestWasModified) {\n          if (allowModify) {\n            result.request = resolved.request;\n            result.resolved = resolved;\n            result.transaction = resolved.resolvedTransaction;\n          } else {\n            throw new Error(`The ${this.walletPlugin.metadata.name} plugin modified the transaction when it was not allowed to.`);\n          }\n        }\n      }\n      for (const hook of context.hooks.afterSign) await hook(result, context);\n      if (context.ui) {\n        await context.ui.onSignComplete();\n      }\n      if (willBroadcast) {\n        if (context.ui) {\n          await context.ui.onBroadcast();\n        }\n        const signed = SignedTransaction.from({\n          ...result.resolved.transaction,\n          signatures: result.signatures\n        });\n        result.response = await context.client.v1.chain.send_transaction(signed);\n        if (result.response.processed && result.response.processed.action_traces) {\n          result.returns = await processReturnValues(result.response, abiCache);\n        }\n        for (const hook of context.hooks.afterBroadcast) await hook(result, context);\n        if (context.ui) {\n          await context.ui.onBroadcastComplete();\n        }\n      }\n      if (context.ui) {\n        await context.ui.onTransactComplete();\n      }\n      return result;\n    } catch (error) {\n      if (error.response && error.response.json) {\n        const {\n          json\n        } = error.response;\n        if (json.error && json.error.details) {\n          const e = new Error(json.error.details[0].message);\n          if (this.ui) {\n            await this.ui.onError(e);\n          }\n          throw e;\n        }\n      } else {\n        if (this.ui) {\n          await this.ui.onError(error);\n        }\n      }\n      throw new Error(error);\n    }\n  }\n  async signTransaction(transaction) {\n    const context = new TransactContext({\n      abiCache: this.abiCache,\n      chain: this.chain,\n      client: this.client,\n      createRequest: args => this.createRequest(args, this.abiCache),\n      fetch: this.fetch,\n      permissionLevel: this.permissionLevel\n    });\n    const request = await SigningRequest.create({\n      transaction,\n      chainId: this.chain.id\n    }, context.esrOptions);\n    request.setBroadcast(false);\n    const resolvedRequest = new ResolvedSigningRequest(request, this.permissionLevel, Transaction.from(transaction), Serializer.objectify(Transaction.from(transaction)), ChainId.from(this.chain.id));\n    const walletResponse = await this.walletPlugin.sign(resolvedRequest, context);\n    return walletResponse.signatures;\n  }\n  getPluginTranslations(transactPlugin) {\n    if (!transactPlugin.translations) {\n      return {};\n    }\n    const prefixed = {};\n    const languages = Object.keys(transactPlugin.translations);\n    languages.forEach(lang => {\n      if (transactPlugin.translations) {\n        prefixed[lang] = {\n          [transactPlugin.id]: transactPlugin.translations[lang]\n        };\n      }\n    });\n    return prefixed;\n  }\n  getMergedAbiCache(args, options) {\n    const abiCache = options?.abiCache || this.abiCache;\n    if (!abiCache['setAbi']) {\n      throw new Error('Custom `abiCache` does not support `setAbi` method.');\n    }\n    this.abis.forEach(def => abiCache.setAbi(def.account, def.abi));\n    if (options?.abis) {\n      options.abis.forEach(def => abiCache.setAbi(def.account, def.abi));\n    }\n    if (options?.contracts) {\n      options.contracts.forEach(c => abiCache.setAbi(c.account, c.abi));\n    }\n    if (args.action && args.action['abi']) {\n      abiCache.setAbi(args.action.account, args.action['abi'], true);\n    }\n    if (args.actions) {\n      args.actions.forEach(action => {\n        if (action['abi']) {\n          abiCache.setAbi(action.account, action['abi'], true);\n        }\n      });\n    }\n    if (args.transaction && args.transaction.actions) {\n      args.transaction.actions.forEach(action => {\n        if (action['abi']) {\n          abiCache.setAbi(action.account, action['abi'], true);\n        }\n      });\n    }\n    return abiCache;\n  }\n}\nasync function processReturnValues(response, abiCache) {\n  const decoded = [];\n  for (const actionTrace of response.processed.action_traces) {\n    if (actionTrace.return_value_hex_data) {\n      const contract = Name.from(actionTrace.act.account);\n      const action = Name.from(actionTrace.act.name);\n      const abi = await abiCache.getAbi(contract);\n      const returnType = abi.action_results.find(a => Name.from(a.name).equals(action));\n      if (returnType) {\n        try {\n          const data = Serializer.decode({\n            data: actionTrace.return_value_hex_data,\n            type: returnType.result_type,\n            abi\n          });\n          decoded.push({\n            contract,\n            action,\n            hex: actionTrace.return_value_hex_data,\n            data,\n            returnType\n          });\n        } catch (error) {\n          console.warn(`Error decoding return value for ${contract}::${action}:`, error);\n          decoded.push({\n            contract,\n            action,\n            hex: actionTrace.return_value_hex_data,\n            data: '',\n            returnType\n          });\n        }\n      } else {\n        console.warn(`No return type found for ${contract}::${action}`);\n        decoded.push({\n          contract,\n          action,\n          hex: actionTrace.return_value_hex_data,\n          data: '',\n          returnType: {\n            name: action,\n            result_type: ''\n          }\n        });\n      }\n    }\n  }\n  return decoded;\n}\nclass BrowserLocalStorage {\n  constructor(keyPrefix = '') {\n    this.keyPrefix = keyPrefix;\n  }\n  async write(key, data) {\n    localStorage.setItem(this.storageKey(key), data);\n  }\n  async read(key) {\n    return localStorage.getItem(this.storageKey(key));\n  }\n  async remove(key) {\n    localStorage.removeItem(this.storageKey(key));\n  }\n  storageKey(key) {\n    return `wharf-${this.keyPrefix}-${key}`;\n  }\n}\nvar WalletPluginMetadata_1;\nlet WalletPluginMetadata = WalletPluginMetadata_1 = class WalletPluginMetadata extends Struct {\n  static from(data) {\n    return new WalletPluginMetadata_1({\n      ...data,\n      logo: data.logo ? Logo.from(data.logo) : undefined\n    });\n  }\n};\n__decorate([Struct.field('string', {\n  optional: true\n})], WalletPluginMetadata.prototype, \"name\", void 0);\n__decorate([Struct.field('string', {\n  optional: true\n})], WalletPluginMetadata.prototype, \"description\", void 0);\n__decorate([Struct.field(Logo, {\n  optional: true\n})], WalletPluginMetadata.prototype, \"logo\", void 0);\n__decorate([Struct.field('string', {\n  optional: true\n})], WalletPluginMetadata.prototype, \"homepage\", void 0);\n__decorate([Struct.field('string', {\n  optional: true\n})], WalletPluginMetadata.prototype, \"download\", void 0);\n__decorate([Struct.field('string', {\n  optional: true\n})], WalletPluginMetadata.prototype, \"publicKey\", void 0);\nWalletPluginMetadata = WalletPluginMetadata_1 = __decorate([Struct.type('wallet_plugin_metadata')], WalletPluginMetadata);\nclass AbstractWalletPlugin {\n  constructor() {\n    this._data = {};\n    this.config = {\n      requiresChainSelect: true,\n      requiresPermissionSelect: false,\n      requiresPermissionEntry: false\n    };\n    this.metadata = new WalletPluginMetadata({});\n  }\n  get data() {\n    return this._data;\n  }\n  set data(data) {\n    this._data = data;\n  }\n  serialize() {\n    return {\n      id: this.id,\n      data: this.data\n    };\n  }\n}\nvar AccountCreationPluginMetadata_1;\nlet AccountCreationPluginMetadata = AccountCreationPluginMetadata_1 = class AccountCreationPluginMetadata extends Struct {\n  static from(data) {\n    return new AccountCreationPluginMetadata_1({\n      ...data,\n      logo: data.logo ? Logo.from(data.logo) : undefined\n    });\n  }\n};\n__decorate([Struct.field('string')], AccountCreationPluginMetadata.prototype, \"name\", void 0);\n__decorate([Struct.field('string', {\n  optional: true\n})], AccountCreationPluginMetadata.prototype, \"description\", void 0);\n__decorate([Struct.field(Logo, {\n  optional: true\n})], AccountCreationPluginMetadata.prototype, \"logo\", void 0);\n__decorate([Struct.field('string', {\n  optional: true\n})], AccountCreationPluginMetadata.prototype, \"homepage\", void 0);\nAccountCreationPluginMetadata = AccountCreationPluginMetadata_1 = __decorate([Struct.type('account_creation_plugin_metadata')], AccountCreationPluginMetadata);\nclass CreateAccountContext {\n  constructor(options) {\n    this.accountCreationPlugins = [];\n    this.uiRequirements = {\n      requiresChainSelect: true,\n      requiresPluginSelect: true\n    };\n    this.appName = String(options.appName);\n    if (options.chains) {\n      this.chains = options.chains;\n    }\n    if (options.chain) {\n      this.chain = options.chain;\n    }\n    this.fetch = options.fetch;\n    this.ui = options.ui;\n    if (options.accountCreationPlugins) {\n      this.accountCreationPlugins = options.accountCreationPlugins;\n    }\n    if (options.uiRequirements) {\n      this.uiRequirements = options.uiRequirements;\n    }\n  }\n  getClient(chain) {\n    return new APIClient({\n      provider: new FetchProvider(chain.url, {\n        fetch: this.fetch\n      })\n    });\n  }\n}\nclass AbstractAccountCreationPlugin {\n  constructor() {\n    this.config = {\n      requiresChainSelect: true\n    };\n    this.metadata = new AccountCreationPluginMetadata({});\n  }\n}\nclass SessionKit {\n  constructor(args, options = {}) {\n    this.abis = [];\n    this.allowModify = true;\n    this.expireSeconds = 120;\n    this.transactPluginsOptions = {};\n    this.accountCreationPlugins = [];\n    this.appName = String(args.appName);\n    this.chains = args.chains.map(chain => ChainDefinition.from(chain));\n    this.ui = args.ui;\n    this.walletPlugins = args.walletPlugins;\n    if (options.fetch) {\n      this.fetch = options.fetch;\n    } else {\n      this.fetch = getFetch(options);\n    }\n    if (options.abis) {\n      this.abis = [...options.abis];\n    }\n    if (options.contracts) {\n      this.abis.push(...options.contracts.map(c => ({\n        account: c.account,\n        abi: c.abi\n      })));\n    }\n    if (options.loginPlugins) {\n      this.loginPlugins = options.loginPlugins;\n    } else {\n      this.loginPlugins = [new BaseLoginPlugin()];\n    }\n    if (options.storage) {\n      this.storage = options.storage;\n    } else {\n      this.storage = new BrowserLocalStorage();\n    }\n    if (options.transactPlugins) {\n      this.transactPlugins = options.transactPlugins;\n    } else {\n      this.transactPlugins = [new BaseTransactPlugin()];\n    }\n    if (typeof options.allowModify !== 'undefined') {\n      this.allowModify = options.allowModify;\n    }\n    if (options.expireSeconds) {\n      this.expireSeconds = options.expireSeconds;\n    }\n    if (options.transactPluginsOptions) {\n      this.transactPluginsOptions = options.transactPluginsOptions;\n    }\n    if (options.accountCreationPlugins) {\n      this.accountCreationPlugins = options.accountCreationPlugins;\n    }\n  }\n  setEndpoint(id, url) {\n    const modifiedChains = [...this.chains];\n    const chainId = Checksum256.from(id);\n    const chainIndex = this.chains.findIndex(c => c.id.equals(chainId));\n    if (chainIndex < 0) {\n      throw new Error('Chain with specified ID not found.');\n    }\n    modifiedChains[chainIndex].url = url;\n    this.chains = modifiedChains;\n  }\n  getChainDefinition(id, override) {\n    const chains = override ? override : this.chains;\n    const chainId = Checksum256.from(id);\n    const chain = chains.find(c => c.id.equals(chainId));\n    if (!chain) {\n      throw new Error(`No chain defined with an ID of: ${chainId}`);\n    }\n    return chain;\n  }\n  async createAccount(options) {\n    try {\n      if (this.accountCreationPlugins.length === 0) {\n        throw new Error('No account creation plugins available.');\n      }\n      let chain = options?.chain;\n      let requiresChainSelect = !chain;\n      let requiresPluginSelect = !options?.pluginId;\n      let accountCreationPlugin;\n      if (options?.pluginId) {\n        requiresPluginSelect = false;\n        accountCreationPlugin = this.accountCreationPlugins.find(p => p.id === options.pluginId);\n        if (!accountCreationPlugin) {\n          throw new Error('Invalid account creation plugin selected.');\n        }\n        if (accountCreationPlugin?.config.requiresChainSelect !== undefined) {\n          requiresChainSelect = accountCreationPlugin?.config.requiresChainSelect;\n        }\n        if (!accountCreationPlugin.config.requiresChainSelect && accountCreationPlugin.config.supportedChains && accountCreationPlugin.config.supportedChains.length === 1) {\n          chain = accountCreationPlugin.config.supportedChains[0];\n        }\n      }\n      let chains = this.chains;\n      if (accountCreationPlugin && accountCreationPlugin?.config.supportedChains?.length) {\n        chains = chains.filter(availableChain => {\n          return accountCreationPlugin?.config.supportedChains?.find(c => {\n            return c.id.equals(availableChain.id);\n          });\n        });\n      }\n      const context = new CreateAccountContext({\n        accountCreationPlugins: this.accountCreationPlugins,\n        appName: this.appName,\n        chain,\n        chains,\n        fetch: this.fetch,\n        ui: this.ui,\n        uiRequirements: {\n          requiresChainSelect,\n          requiresPluginSelect\n        }\n      });\n      if (requiresPluginSelect || requiresChainSelect) {\n        const response = await context.ui.onAccountCreate(context);\n        const pluginId = options?.pluginId || response.pluginId;\n        if (!pluginId) {\n          throw new Error('No account creation plugin selected.');\n        }\n        accountCreationPlugin = context.accountCreationPlugins.find(p => p.id === pluginId);\n        if (!accountCreationPlugin) {\n          throw new Error('No account creation plugin selected.');\n        }\n        if (!accountCreationPlugin.config.requiresChainSelect && accountCreationPlugin.config.supportedChains && accountCreationPlugin.config.supportedChains.length === 1) {\n          context.chain = accountCreationPlugin.config.supportedChains[0];\n        }\n        if (response.chain) {\n          context.chain = this.getChainDefinition(response.chain, context.chains);\n        }\n        if (accountCreationPlugin.config.requiresChainSelect && !context.chain) {\n          throw new Error(`Account creation plugin (${pluginId}) requires chain selection, and no chain was selected.`);\n        }\n      }\n      if (!accountCreationPlugin) {\n        throw new Error('No account creation plugin selected');\n      }\n      const accountCreationData = await accountCreationPlugin.create(context);\n      await context.ui.onAccountCreateComplete();\n      return accountCreationData;\n    } catch (error) {\n      await this.ui.onError(error);\n      throw new Error(error);\n    }\n  }\n  async login(options) {\n    try {\n      const context = new LoginContext({\n        appName: this.appName,\n        arbitrary: options?.arbitrary || {},\n        chain: undefined,\n        chains: options && options?.chains ? options.chains.map(c => this.getChainDefinition(c)) : this.chains,\n        fetch: this.fetch,\n        loginPlugins: this.loginPlugins,\n        ui: this.ui,\n        walletPlugins: this.walletPlugins.map(plugin => {\n          return {\n            config: plugin.config,\n            metadata: WalletPluginMetadata.from(plugin.metadata),\n            retrievePublicKey: plugin.retrievePublicKey?.bind(plugin)\n          };\n        })\n      });\n      await context.ui.onLogin();\n      let walletPlugin = undefined;\n      if (this.walletPlugins.length === 1) {\n        walletPlugin = this.walletPlugins[0];\n        context.walletPluginIndex = 0;\n        context.uiRequirements.requiresWalletSelect = false;\n      } else if (options?.walletPlugin) {\n        const index = this.walletPlugins.findIndex(p => p.id === options.walletPlugin);\n        if (index >= 0) {\n          walletPlugin = this.walletPlugins[index];\n          context.walletPluginIndex = index;\n          context.uiRequirements.requiresWalletSelect = false;\n        }\n      }\n      if (walletPlugin) {\n        context.uiRequirements = {\n          ...context.uiRequirements,\n          ...walletPlugin.config\n        };\n      }\n      if (options && options.chain) {\n        if (options.chain instanceof ChainDefinition) {\n          context.chain = options.chain;\n        } else {\n          context.chain = this.getChainDefinition(options.chain, context.chains);\n        }\n        context.uiRequirements.requiresChainSelect = false;\n      } else if (context.chains.length === 1) {\n        context.chain = context.chains[0];\n        context.uiRequirements.requiresChainSelect = false;\n      } else {\n        context.uiRequirements.requiresChainSelect = true;\n      }\n      if (options?.permissionLevel) {\n        context.permissionLevel = PermissionLevel.from(options.permissionLevel);\n        context.uiRequirements.requiresPermissionSelect = false;\n      }\n      if (context.uiRequirements.requiresChainSelect || context.uiRequirements.requiresPermissionSelect || context.uiRequirements.requiresPermissionEntry || context.uiRequirements.requiresWalletSelect) {\n        const uiLoginResponse = await context.ui.login(context);\n        if (uiLoginResponse.walletPluginIndex !== undefined) {\n          walletPlugin = this.walletPlugins[uiLoginResponse.walletPluginIndex];\n        }\n        if (!walletPlugin) {\n          throw new Error('UserInterface did not return a valid WalletPlugin index.');\n        }\n        if (uiLoginResponse.chainId) {\n          if (!context.chains.some(c => c.id.equals(uiLoginResponse.chainId))) {\n            throw new Error('UserInterface did not return a chain ID matching the subset of chains.');\n          }\n          context.chain = this.getChainDefinition(uiLoginResponse.chainId, context.chains);\n        }\n        if (uiLoginResponse.permissionLevel) {\n          context.permissionLevel = PermissionLevel.from(uiLoginResponse.permissionLevel);\n        }\n      }\n      if (!walletPlugin) {\n        throw new Error('No WalletPlugin available to perform the login.');\n      }\n      const {\n        supportedChains\n      } = walletPlugin.config;\n      if (context.chain && supportedChains && supportedChains.length && !supportedChains.includes(String(context.chain.id))) {\n        throw new Error(`The wallet plugin '${walletPlugin.metadata.name}' does not support the chain '${context.chain.id}'`);\n      }\n      for (const hook of context.hooks.beforeLogin) await hook(context);\n      const response = await walletPlugin.login(context);\n      const session = new Session({\n        chain: this.getChainDefinition(response.chain),\n        permissionLevel: response.permissionLevel,\n        walletPlugin\n      }, this.getSessionOptions(options));\n      for (const hook of context.hooks.afterLogin) await hook(context);\n      this.persistSession(session, options?.setAsDefault);\n      await context.ui.onLoginComplete();\n      return {\n        context,\n        response,\n        session\n      };\n    } catch (error) {\n      await this.ui.onError(error);\n      throw new Error(error);\n    }\n  }\n  logoutParams(session, walletPlugin) {\n    if (session instanceof Session) {\n      return {\n        session,\n        appName: this.appName\n      };\n    } else {\n      return {\n        session: new Session({\n          chain: this.getChainDefinition(session.chain),\n          permissionLevel: PermissionLevel.from({\n            actor: session.actor,\n            permission: session.permission\n          }),\n          walletPlugin\n        }),\n        appName: this.appName\n      };\n    }\n  }\n  async logout(session) {\n    if (!this.storage) {\n      throw new Error('An instance of Storage must be provided to utilize the logout method.');\n    }\n    await this.storage.remove('session');\n    if (session) {\n      const walletPlugin = this.walletPlugins.find(wPlugin => session?.walletPlugin.id === wPlugin.id);\n      if (walletPlugin?.logout) {\n        await walletPlugin.logout(this.logoutParams(session, walletPlugin));\n      }\n      const sessions = await this.getSessions();\n      if (sessions) {\n        let serialized = session;\n        if (session instanceof Session) {\n          serialized = session.serialize();\n        }\n        const other = sessions.filter(s => {\n          return !Checksum256.from(s.chain).equals(Checksum256.from(String(serialized.chain))) || !Name.from(s.actor).equals(Name.from(serialized.actor)) || !Name.from(s.permission).equals(Name.from(serialized.permission));\n        });\n        await this.storage.write('sessions', JSON.stringify(other));\n      }\n    } else {\n      const sessions = await this.getSessions();\n      await this.storage.remove('sessions');\n      if (sessions) {\n        Promise.all(sessions.map(s => {\n          const walletPlugin = this.walletPlugins.find(wPlugin => s.walletPlugin.id === wPlugin.id);\n          if (walletPlugin?.logout) {\n            return walletPlugin.logout(this.logoutParams(s, walletPlugin));\n          } else {\n            return Promise.resolve();\n          }\n        }));\n      }\n    }\n  }\n  async restore(args, options) {\n    if (!args) {\n      const data = await this.storage.read('session');\n      if (data) {\n        args = JSON.parse(data);\n      } else {\n        return;\n      }\n    }\n    if (!args) {\n      throw new Error('Either a RestoreArgs object or a Storage instance must be provided.');\n    }\n    const chainId = Checksum256.from(args.chain instanceof ChainDefinition ? args.chain.id : args.chain);\n    let serializedSession;\n    const data = await this.storage.read('sessions');\n    if (data) {\n      const sessions = JSON.parse(data);\n      if (args.actor && args.permission) {\n        serializedSession = sessions.find(s => {\n          return args && chainId.equals(s.chain) && s.actor === args.actor && s.permission === args.permission;\n        });\n      } else {\n        serializedSession = sessions.find(s => {\n          return args && chainId.equals(s.chain) && s.default;\n        });\n      }\n    } else {\n      if (args.actor && args.permission && args.walletPlugin) {\n        serializedSession = {\n          chain: String(chainId),\n          actor: args.actor,\n          permission: args.permission,\n          walletPlugin: {\n            id: args.walletPlugin.id,\n            data: args.walletPlugin.data\n          },\n          data: args.data\n        };\n      } else {\n        throw new Error('No sessions found in storage. A wallet plugin must be provided.');\n      }\n    }\n    if (!serializedSession) {\n      return;\n    }\n    const walletPlugin = this.walletPlugins.find(p => {\n      if (!args) {\n        return false;\n      }\n      return p.id === serializedSession.walletPlugin.id;\n    });\n    if (!walletPlugin) {\n      throw new Error(`No WalletPlugin found with the ID of: '${serializedSession.walletPlugin.id}'`);\n    }\n    if (serializedSession.walletPlugin.data) {\n      walletPlugin.data = serializedSession.walletPlugin.data;\n    }\n    if (args.walletPlugin && args.walletPlugin.data) {\n      walletPlugin.data = args.walletPlugin.data;\n    }\n    const session = new Session({\n      chain: this.getChainDefinition(serializedSession.chain),\n      permissionLevel: PermissionLevel.from({\n        actor: serializedSession.actor,\n        permission: serializedSession.permission\n      }),\n      walletPlugin\n    }, this.getSessionOptions(options));\n    if (serializedSession.data) {\n      session.data = serializedSession.data;\n    }\n    this.persistSession(session, options?.setAsDefault);\n    return session;\n  }\n  async restoreAll() {\n    const sessions = [];\n    const serializedSessions = await this.getSessions();\n    if (serializedSessions) {\n      for (const s of serializedSessions) {\n        const session = await this.restore(s);\n        if (session) {\n          sessions.push(session);\n        }\n      }\n    }\n    return sessions;\n  }\n  async persistSession(session, setAsDefault = true) {\n    if (!this.storage) {\n      return;\n    }\n    const serialized = session.serialize();\n    serialized.default = setAsDefault;\n    if (setAsDefault) {\n      this.storage.write('session', JSON.stringify(serialized));\n    }\n    const existing = await this.storage.read('sessions');\n    if (existing) {\n      const stored = JSON.parse(existing);\n      const sessions = stored.filter(s => {\n        return !Checksum256.from(s.chain).equals(Checksum256.from(serialized.chain)) || !Name.from(s.actor).equals(Name.from(serialized.actor)) || !Name.from(s.permission).equals(Name.from(serialized.permission));\n      }).map(s => {\n        if (session.chain.id.equals(s.chain)) {\n          s.default = false;\n        }\n        return s;\n      });\n      const orderedSessions = [...sessions, serialized];\n      orderedSessions.sort((a, b) => {\n        const chain = String(a.chain).localeCompare(String(b.chain));\n        const actor = String(a.actor).localeCompare(String(b.actor));\n        const permission = String(a.permission).localeCompare(String(b.permission));\n        return chain || actor || permission;\n      });\n      this.storage.write('sessions', JSON.stringify(orderedSessions));\n    } else {\n      this.storage.write('sessions', JSON.stringify([serialized]));\n    }\n  }\n  async getSessions() {\n    if (!this.storage) {\n      throw new Error('No storage instance is available to retrieve sessions from.');\n    }\n    const data = await this.storage.read('sessions');\n    if (!data) return [];\n    try {\n      const parsed = JSON.parse(data);\n      const filtered = parsed.filter(s => this.walletPlugins.some(p => {\n        return p.id === s.walletPlugin.id;\n      }));\n      return filtered;\n    } catch (e) {\n      throw new Error(`Failed to parse sessions from storage (${e})`);\n    }\n  }\n  getSessionOptions(options) {\n    return {\n      abis: this.abis,\n      allowModify: this.allowModify,\n      appName: this.appName,\n      expireSeconds: this.expireSeconds,\n      fetch: this.fetch,\n      storage: this.storage,\n      transactPlugins: options?.transactPlugins || this.transactPlugins,\n      transactPluginsOptions: options?.transactPluginsOptions || this.transactPluginsOptions,\n      ui: this.ui\n    };\n  }\n}\nclass AbstractUserInterface {\n  translate(key, options, namespace) {\n    throw new Error('The `translate` method must be implemented in this UserInterface. Called with: ' + JSON.stringify({\n      key,\n      options,\n      namespace\n    }));\n  }\n  getTranslate(namespace) {\n    return (key, options) => this.translate(key, options, namespace);\n  }\n  addTranslations(translations) {\n    throw new Error('The `addTranslations` method must be implemented in this UserInterface. Called with: ' + JSON.stringify(translations));\n  }\n}\nexport { AbstractAccountCreationPlugin, AbstractLoginPlugin, AbstractTransactPlugin, AbstractUserInterface, AbstractWalletPlugin, AccountCreationPluginMetadata, BaseLoginPlugin, BaseTransactPlugin, BrowserLocalStorage, CreateAccountContext, LoginContext, LoginHookTypes, Session, SessionKit, TransactContext, TransactHookTypes, TransactRevisions, WalletPluginMetadata, appendAction, SessionKit as default, getFetch, prependAction };\n"],
  "mappings": "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",
  "names": ["LoginHookTypes", "TransactHookTypes", "WalletPluginMetadata", "AccountCreationPluginMetadata", "data"]
}
