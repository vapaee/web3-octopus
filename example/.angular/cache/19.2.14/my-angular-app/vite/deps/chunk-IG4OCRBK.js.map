{
  "version": 3,
  "sources": ["../../../../../../node_modules/@wharfkit/signing-request/lib/signing-request.m.js", "../../../../../../node_modules/@wharfkit/abicache/lib/abicache.m.js"],
  "sourcesContent": ["/**\n * EOSIO Signing Request v3.2.0\n * https://github.com/greymass/eosio-signing-request\n *\n * @license\n * Copyright © 2021 Greymass Inc.\n * \n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the “Software”), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n * \n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n * \n * YOU ACKNOWLEDGE THAT THIS SOFTWARE IS NOT DESIGNED, LICENSED OR\n * INTENDED FOR USE IN THE DESIGN, CONSTRUCTION, OPERATION OR\n * MAINTENANCE OF ANY MILITARY FACILITY.\n */\nimport { TypeAlias, Variant, Checksum256, isInstanceOf, UInt8, Struct, PermissionLevel, Action, Transaction, Name, TimePointSec, Signature, Serializer, Authority, Bytes, ABIEncoder, ABIDecoder, ABI, UInt16, UInt32 } from '@wharfkit/antelope';\nimport { __decorate } from 'tslib';\n\n/**\n * Base64u - URL-Safe Base64 variant no padding.\n * Based on https://gist.github.com/jonleighton/958841\n */\nconst baseCharset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst lookup = new Uint8Array(256);\nfor (let i = 0; i < 62; i++) {\n  lookup[baseCharset.charCodeAt(i)] = i;\n}\n// support both urlsafe and standard base64\nlookup[43] = lookup[45] = 62;\nlookup[47] = lookup[95] = 63;\nfunction encode(data, urlSafe = true) {\n  const byteLength = data.byteLength;\n  const byteRemainder = byteLength % 3;\n  const mainLength = byteLength - byteRemainder;\n  const charset = baseCharset + (urlSafe ? '-_' : '+/');\n  const parts = [];\n  let a;\n  let b;\n  let c;\n  let d;\n  let chunk;\n  // Main loop deals with bytes in chunks of 3\n  for (let i = 0; i < mainLength; i += 3) {\n    // Combine the three bytes into a single integer\n    chunk = data[i] << 16 | data[i + 1] << 8 | data[i + 2];\n    // Use bitmasks to extract 6-bit segments from the triplet\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n    b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n    c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n    d = chunk & 63; // 63       =  2^6 - 1\n    // Convert the raw binary segments to the appropriate ASCII encoding\n    parts.push(charset[a] + charset[b] + charset[c] + charset[d]);\n  }\n  // Deal with the remaining bytes\n  if (byteRemainder === 1) {\n    chunk = data[mainLength];\n    a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n    // Set the 4 least significant bits to zero\n    b = (chunk & 3) << 4; // 3   = 2^2 - 1\n    parts.push(charset[a] + charset[b]);\n  } else if (byteRemainder === 2) {\n    chunk = data[mainLength] << 8 | data[mainLength + 1];\n    a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n    b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n    // Set the 2 least significant bits to zero\n    c = (chunk & 15) << 2; // 15    = 2^4 - 1\n    parts.push(charset[a] + charset[b] + charset[c]);\n  }\n  return parts.join('');\n}\nfunction decode(input) {\n  const byteLength = input.length * 0.75;\n  const data = new Uint8Array(byteLength);\n  let a;\n  let b;\n  let c;\n  let d;\n  let p = 0;\n  for (let i = 0; i < input.length; i += 4) {\n    a = lookup[input.charCodeAt(i)];\n    b = lookup[input.charCodeAt(i + 1)];\n    c = lookup[input.charCodeAt(i + 2)];\n    d = lookup[input.charCodeAt(i + 3)];\n    data[p++] = a << 2 | b >> 4;\n    data[p++] = (b & 15) << 4 | c >> 2;\n    data[p++] = (c & 3) << 6 | d & 63;\n  }\n  return data;\n}\nvar base64u = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  encode: encode,\n  decode: decode\n});\n\n/** Chain ID aliases. */\nvar ChainName;\n(function (ChainName) {\n  ChainName[ChainName[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ChainName[ChainName[\"EOS\"] = 1] = \"EOS\";\n  ChainName[ChainName[\"TELOS\"] = 2] = \"TELOS\";\n  ChainName[ChainName[\"JUNGLE\"] = 3] = \"JUNGLE\";\n  ChainName[ChainName[\"KYLIN\"] = 4] = \"KYLIN\";\n  ChainName[ChainName[\"WORBLI\"] = 5] = \"WORBLI\";\n  ChainName[ChainName[\"BOS\"] = 6] = \"BOS\";\n  ChainName[ChainName[\"MEETONE\"] = 7] = \"MEETONE\";\n  ChainName[ChainName[\"INSIGHTS\"] = 8] = \"INSIGHTS\";\n  ChainName[ChainName[\"BEOS\"] = 9] = \"BEOS\";\n  ChainName[ChainName[\"WAX\"] = 10] = \"WAX\";\n  ChainName[ChainName[\"PROTON\"] = 11] = \"PROTON\";\n  ChainName[ChainName[\"FIO\"] = 12] = \"FIO\";\n})(ChainName || (ChainName = {}));\nlet ChainId = class ChainId extends Checksum256 {\n  static from(value) {\n    if (isInstanceOf(value, this)) {\n      return value;\n    }\n    if (typeof value === 'number') {\n      value = ChainIdLookup.get(value);\n      if (!value) {\n        throw new Error('Unknown chain id alias');\n      }\n    }\n    return super.from(value);\n  }\n  get chainVariant() {\n    const name = this.chainName;\n    if (name !== ChainName.UNKNOWN) {\n      return ChainIdVariant.from(['chain_alias', name]);\n    }\n    return ChainIdVariant.from(this);\n  }\n  get chainName() {\n    const cid = this.hexString;\n    for (const [n, id] of ChainIdLookup) {\n      if (id === cid) {\n        return n;\n      }\n    }\n    return ChainName.UNKNOWN;\n  }\n};\nChainId = __decorate([TypeAlias('chain_id')], ChainId);\nlet ChainAlias = class ChainAlias extends UInt8 {};\nChainAlias = __decorate([TypeAlias('chain_alias')], ChainAlias);\nlet ChainIdVariant = class ChainIdVariant extends Variant {\n  get chainId() {\n    if (isInstanceOf(this.value, ChainId)) {\n      return this.value;\n    }\n    return ChainId.from(Number(this.value.value));\n  }\n};\nChainIdVariant = __decorate([Variant.type('variant_id', [ChainAlias, ChainId])], ChainIdVariant);\nconst ChainIdLookup = new Map([[ChainName.EOS, 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'], [ChainName.TELOS, '4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11'], [ChainName.JUNGLE, 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'], [ChainName.KYLIN, '5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'], [ChainName.WORBLI, '73647cde120091e0a4b85bced2f3cfdb3041e266cbbe95cee59b73235a1b3b6f'], [ChainName.BOS, 'd5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86'], [ChainName.MEETONE, 'cfe6486a83bad4962f232d48003b1824ab5665c36778141034d75e57b956e422'], [ChainName.INSIGHTS, 'b042025541e25a472bffde2d62edd457b7e70cee943412b1ea0f044f88591664'], [ChainName.BEOS, 'b912d19a6abd2b1b05611ae5be473355d64d95aeff0c09bedc8c166cd6468fe4'], [ChainName.WAX, '1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4'], [ChainName.PROTON, '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0'], [ChainName.FIO, '21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c']]);\n\n/** SigningRequest ABI and typedefs. */\nvar RequestFlags_1;\nlet AccountName = class AccountName extends Name {};\nAccountName = __decorate([TypeAlias('account_name')], AccountName);\nlet PermissionName = class PermissionName extends Name {};\nPermissionName = __decorate([TypeAlias('permission_name')], PermissionName);\nlet IdentityV2 = class IdentityV2 extends Struct {};\n__decorate([Struct.field(PermissionLevel, {\n  optional: true\n})], IdentityV2.prototype, \"permission\", void 0);\nIdentityV2 = __decorate([Struct.type('identity')], IdentityV2);\nlet IdentityV3 = class IdentityV3 extends Struct {};\n__decorate([Struct.field('name')], IdentityV3.prototype, \"scope\", void 0);\n__decorate([Struct.field(PermissionLevel, {\n  optional: true\n})], IdentityV3.prototype, \"permission\", void 0);\nIdentityV3 = __decorate([Struct.type('identity')], IdentityV3);\nlet RequestVariantV2 = class RequestVariantV2 extends Variant {};\nRequestVariantV2 = __decorate([Variant.type('variant_req', [Action, {\n  type: Action,\n  array: true\n}, Transaction, IdentityV2])], RequestVariantV2);\nlet RequestVariantV3 = class RequestVariantV3 extends Variant {};\nRequestVariantV3 = __decorate([Variant.type('variant_req', [Action, {\n  type: Action,\n  array: true\n}, Transaction, IdentityV3])], RequestVariantV3);\nlet RequestFlags = RequestFlags_1 = class RequestFlags extends UInt8 {\n  get broadcast() {\n    return (Number(this) & RequestFlags_1.broadcast) !== 0;\n  }\n  set broadcast(enabled) {\n    this.setFlag(RequestFlags_1.broadcast, enabled);\n  }\n  get background() {\n    return (Number(this) & RequestFlags_1.background) !== 0;\n  }\n  set background(enabled) {\n    this.setFlag(RequestFlags_1.background, enabled);\n  }\n  setFlag(flag, enabled) {\n    if (enabled) {\n      // TODO: implement bitwise operators in core, bn.js setbit does not work\n      this.value = UInt8.from(Number(this) | flag).value;\n    } else {\n      this.value = UInt8.from(Number(this) & ~flag).value;\n    }\n  }\n};\nRequestFlags.broadcast = 1 << 0;\nRequestFlags.background = 1 << 1;\nRequestFlags = RequestFlags_1 = __decorate([TypeAlias('request_flags')], RequestFlags);\nlet InfoPair = class InfoPair extends Struct {};\n__decorate([Struct.field('string')], InfoPair.prototype, \"key\", void 0);\n__decorate([Struct.field('bytes')], InfoPair.prototype, \"value\", void 0);\nInfoPair = __decorate([Struct.type('info_pair')], InfoPair);\nlet RequestDataV2 = class RequestDataV2 extends Struct {};\n__decorate([Struct.field(ChainIdVariant)], RequestDataV2.prototype, \"chain_id\", void 0);\n__decorate([Struct.field(RequestVariantV2)], RequestDataV2.prototype, \"req\", void 0);\n__decorate([Struct.field(RequestFlags)], RequestDataV2.prototype, \"flags\", void 0);\n__decorate([Struct.field('string')], RequestDataV2.prototype, \"callback\", void 0);\n__decorate([Struct.field(InfoPair, {\n  array: true\n})], RequestDataV2.prototype, \"info\", void 0);\nRequestDataV2 = __decorate([Struct.type('signing_request')], RequestDataV2);\nlet RequestDataV3 = class RequestDataV3 extends Struct {};\n__decorate([Struct.field(ChainIdVariant)], RequestDataV3.prototype, \"chain_id\", void 0);\n__decorate([Struct.field(RequestVariantV3)], RequestDataV3.prototype, \"req\", void 0);\n__decorate([Struct.field(RequestFlags)], RequestDataV3.prototype, \"flags\", void 0);\n__decorate([Struct.field('string')], RequestDataV3.prototype, \"callback\", void 0);\n__decorate([Struct.field(InfoPair, {\n  array: true\n})], RequestDataV3.prototype, \"info\", void 0);\nRequestDataV3 = __decorate([Struct.type('signing_request')], RequestDataV3);\nlet RequestSignature = class RequestSignature extends Struct {};\n__decorate([Struct.field('name')], RequestSignature.prototype, \"signer\", void 0);\n__decorate([Struct.field('signature')], RequestSignature.prototype, \"signature\", void 0);\nRequestSignature = __decorate([Struct.type('request_signature')], RequestSignature);\nvar IdentityProof_1;\nlet IdentityProof = IdentityProof_1 = class IdentityProof extends Struct {\n  static from(value) {\n    if (isInstanceOf(value, IdentityProof_1)) {\n      return value;\n    } else if (typeof value === 'string') {\n      return IdentityProof_1.fromString(value);\n    } else {\n      return super.from(value);\n    }\n  }\n  /**\n   * Create a new instance from an EOSIO authorization header string.\n   * \"EOSIO <base64payload>\"\n   */\n  static fromString(string) {\n    const parts = string.split(' ');\n    if (parts.length !== 2 || parts[0] !== 'EOSIO') {\n      throw new Error('Invalid IdentityProof string');\n    }\n    const data = decode(parts[1]);\n    return Serializer.decode({\n      data,\n      type: IdentityProof_1\n    });\n  }\n  /** Create a new instance from a callback payload. */\n  static fromPayload(payload, options = {}) {\n    const request = SigningRequest.from(payload.req, options);\n    if (!(request.version >= 3 && request.isIdentity())) {\n      throw new Error('Not an identity request');\n    }\n    return this.from({\n      chainId: payload.cid || request.getChainId(),\n      scope: request.getIdentityScope(),\n      expiration: payload.ex,\n      signer: {\n        actor: payload.sa,\n        permission: payload.sp\n      },\n      signature: payload.sig\n    });\n  }\n  /**\n   * Transaction this proof resolves to.\n   * @internal\n   */\n  get transaction() {\n    const action = Action.from({\n      account: '',\n      name: 'identity',\n      authorization: [this.signer],\n      data: IdentityV3.from({\n        scope: this.scope,\n        permission: this.signer\n      })\n    });\n    return Transaction.from({\n      ref_block_num: 0,\n      ref_block_prefix: 0,\n      expiration: this.expiration,\n      actions: [action]\n    });\n  }\n  /**\n   * Recover the public key that signed this proof.\n   */\n  recover() {\n    return this.signature.recoverDigest(this.transaction.signingDigest(this.chainId));\n  }\n  /**\n   * Verify that given authority signed this proof.\n   * @param auth The accounts signing authority.\n   * @param currentTime Time to verify expiry against, if unset will use system time.\n   */\n  verify(auth, currentTime) {\n    const now = TimePointSec.from(currentTime || new Date()).toMilliseconds();\n    return now < this.expiration.toMilliseconds() && Authority.from(auth).hasPermission(this.recover());\n  }\n  /**\n   * Encode the proof to an `EOSIO` auth header string.\n   */\n  toString() {\n    const data = Serializer.encode({\n      object: this\n    });\n    return `EOSIO ${encode(data.array, false)}`;\n  }\n};\n__decorate([Struct.field(ChainId)], IdentityProof.prototype, \"chainId\", void 0);\n__decorate([Struct.field(Name)], IdentityProof.prototype, \"scope\", void 0);\n__decorate([Struct.field(TimePointSec)], IdentityProof.prototype, \"expiration\", void 0);\n__decorate([Struct.field(PermissionLevel)], IdentityProof.prototype, \"signer\", void 0);\n__decorate([Struct.field(Signature)], IdentityProof.prototype, \"signature\", void 0);\nIdentityProof = IdentityProof_1 = __decorate([Struct.type('identity_proof')], IdentityProof);\n\n/**\n * EOSIO Signing Request (ESR).\n */\n/** Current supported protocol version, backwards compatible with version 2. */\nconst ProtocolVersion = 3;\n/**\n * The placeholder name: `............1` aka `uint64(1)`.\n * If used in action data will be resolved to current signer.\n * If used in as an authorization permission will be resolved to\n * the signers permission level.\n *\n * Example action:\n * ```\n * { account: \"eosio.token\",\n *   name: \"transfer\",\n *   authorization: [{actor: \"............1\", permission: \"............1\"}],\n *   data: {\n *     from: \"............1\",\n *     to: \"bar\",\n *     quantity: \"42.0000 EOS\",\n *     memo: \"Don't panic\" }}\n * ```\n * When signed by `foo@active` would resolve to:\n * ```\n * { account: \"eosio.token\",\n *   name: \"transfer\",\n *   authorization: [{actor: \"foo\", permission: \"active\"}],\n *   data: {\n *     from: \"foo\",\n *     to: \"bar\",\n *     quantity: \"42.0000 EOS\",\n *     memo: \"Don't panic\" }}\n * ```\n */\nconst PlaceholderName = Name.from('............1'); // aka uint64(1)\n/** Placeholder that will resolve to signer permission name. */\nconst PlaceholderPermission = Name.from('............2'); // aka uint64(2)\nconst PlaceholderAuth = PermissionLevel.from({\n  actor: PlaceholderName,\n  permission: PlaceholderPermission\n});\nclass SigningRequest {\n  /**\n   * Create a new signing request.\n   * Normally not used directly, see the `create` and `from` class methods.\n   */\n  constructor(version, data, zlib, abiProvider, signature) {\n    if (data.flags.broadcast && data.req.variantName === 'identity') {\n      throw new Error('Invalid request (identity request cannot be broadcast)');\n    }\n    this.version = version;\n    this.data = data;\n    this.zlib = zlib;\n    this.abiProvider = abiProvider;\n    this.signature = signature;\n  }\n  /** Return the identity ABI for given version. */\n  static identityAbi(version) {\n    const abi = Serializer.synthesize(this.identityType(version));\n    abi.actions = [{\n      name: 'identity',\n      type: 'identity',\n      ricardian_contract: ''\n    }];\n    return abi;\n  }\n  /** Return the ABISerializableType identity type for given version. */\n  static identityType(version) {\n    return version === 2 ? IdentityV2 : IdentityV3;\n  }\n  /** Return the ABISerializableType storage type for given version. */\n  static storageType(version) {\n    return version === 2 ? RequestDataV2 : RequestDataV3;\n  }\n  /** Create a new signing request. */\n  static async create(args, options = {}) {\n    let actions;\n    if (args.action) {\n      actions = [args.action];\n    } else if (args.actions) {\n      actions = args.actions;\n    } else if (args.transaction) {\n      actions = args.transaction.actions || [];\n    } else {\n      actions = [];\n    }\n    const requiredAbis = actions.filter(action => !Bytes.isBytes(action.data) && action.data.constructor.abiName === undefined).map(action => Name.from(action.account));\n    const abis = {};\n    if (requiredAbis.length > 0) {\n      const provider = options.abiProvider;\n      if (!provider) {\n        throw new Error('Missing abi provider');\n      }\n      const accountAbis = await Promise.all(requiredAbis.map(account => provider.getAbi(account)));\n      for (const [idx, abi] of accountAbis.entries()) {\n        abis[requiredAbis[idx].toString()] = abi;\n      }\n    }\n    return this.createSync(args, options, abis);\n  }\n  /**\n   * Synchronously create a new signing request.\n   * @throws If an un-encoded action with no abi def is encountered.\n   */\n  static createSync(args, options = {}, abis = {}) {\n    let version = 2;\n    const data = {};\n    const encode = action => encodeAction(action, abis);\n    // multi-chain requests requires version 3\n    if (args.chainId === null) {\n      version = 3;\n    }\n    // set the request data\n    if (args.identity !== undefined) {\n      if (args.identity.scope) {\n        version = 3;\n      }\n      data.req = ['identity', this.identityType(version).from(args.identity)];\n    } else if (args.action && !args.actions && !args.transaction) {\n      data.req = ['action', encode(args.action)];\n    } else if (args.actions && !args.action && !args.transaction) {\n      if (args.actions.length === 1) {\n        data.req = ['action', encode(args.actions[0])];\n      } else {\n        data.req = ['action[]', args.actions.map(encode)];\n      }\n    } else if (args.transaction && !args.action && !args.actions) {\n      const tx = args.transaction;\n      // set default values if missing\n      if (tx.expiration === undefined) {\n        tx.expiration = '1970-01-01T00:00:00.000';\n      }\n      if (tx.ref_block_num === undefined) {\n        tx.ref_block_num = 0;\n      }\n      if (tx.ref_block_prefix === undefined) {\n        tx.ref_block_prefix = 0;\n      }\n      if (tx.context_free_actions === undefined) {\n        tx.context_free_actions = [];\n      }\n      if (tx.transaction_extensions === undefined) {\n        tx.transaction_extensions = [];\n      }\n      if (tx.delay_sec === undefined) {\n        tx.delay_sec = 0;\n      }\n      if (tx.max_cpu_usage_ms === undefined) {\n        tx.max_cpu_usage_ms = 0;\n      }\n      if (tx.max_net_usage_words === undefined) {\n        tx.max_net_usage_words = 0;\n      }\n      if (tx.actions === undefined) {\n        tx.actions = [];\n      }\n      if (tx.context_free_actions === undefined) {\n        tx.context_free_actions = [];\n      }\n      // encode actions if needed\n      tx.actions = tx.actions.map(encode);\n      data.req = ['transaction', tx];\n    } else {\n      throw new TypeError('Invalid arguments: Must have exactly one of action, actions or transaction');\n    }\n    // set the chain id\n    if (args.chainId === null) {\n      data.chain_id = ChainIdVariant.from(['chain_alias', 0]);\n    } else {\n      data.chain_id = ChainId.from(args.chainId || ChainName.EOS).chainVariant;\n    }\n    // request flags and callback\n    const flags = RequestFlags.from(0);\n    let callback = '';\n    flags.broadcast = args.broadcast !== undefined ? args.broadcast : data.req[0] !== 'identity';\n    if (typeof args.callback === 'string') {\n      callback = args.callback;\n    } else if (typeof args.callback === 'object') {\n      callback = args.callback.url;\n      flags.background = args.callback.background || false;\n    }\n    data.flags = flags;\n    data.callback = callback;\n    // info pairs\n    data.info = [];\n    if (typeof args.info === 'object') {\n      for (const key in args.info) {\n        const isOwn = Object.prototype.hasOwnProperty.call(args.info, key);\n        if (isOwn) {\n          let value = args.info[key];\n          if (typeof value === 'string') {\n            value = Bytes.from(value, 'utf8');\n          } else if (!(value instanceof Bytes)) {\n            value = Serializer.encode({\n              object: value\n            });\n          }\n          data.info.push({\n            key,\n            value\n          });\n        }\n      }\n    }\n    if (args.chainIds && args.chainId === null) {\n      const ids = args.chainIds.map(id => ChainId.from(id).chainVariant);\n      data.info.push({\n        key: 'chain_ids',\n        value: Serializer.encode({\n          object: ids,\n          type: {\n            type: ChainIdVariant,\n            array: true\n          }\n        })\n      });\n    }\n    const req = new SigningRequest(version, this.storageType(version).from(data), options.zlib, options.abiProvider);\n    // sign the request if given a signature provider\n    if (options.signatureProvider) {\n      req.sign(options.signatureProvider);\n    }\n    return req;\n  }\n  /** Creates an identity request. */\n  static identity(args, options = {}) {\n    let permission = {\n      actor: args.account || PlaceholderName,\n      permission: args.permission || PlaceholderPermission\n    };\n    if (permission.actor === PlaceholderName && permission.permission === PlaceholderPermission) {\n      permission = undefined;\n    }\n    return this.createSync({\n      ...args,\n      identity: {\n        permission,\n        scope: args.scope\n      },\n      broadcast: false\n    }, options);\n  }\n  /**\n   * Create a request from a chain id and serialized transaction.\n   * @param chainId The chain id where the transaction is valid.\n   * @param serializedTransaction The serialized transaction.\n   * @param options Creation options.\n   */\n  static fromTransaction(chainId, serializedTransaction, options = {}) {\n    const id = ChainId.from(chainId);\n    serializedTransaction = Bytes.from(serializedTransaction);\n    const encoder = new ABIEncoder();\n    encoder.writeByte(2); // header\n    encoder.writeArray(Serializer.encode({\n      object: id.chainVariant\n    }).array);\n    encoder.writeByte(2); // transaction variant\n    encoder.writeArray(Bytes.from(serializedTransaction).array);\n    encoder.writeByte(RequestFlags.broadcast);\n    encoder.writeByte(0); // callback\n    encoder.writeByte(0); // info\n    return SigningRequest.fromData(encoder.getData(), options);\n  }\n  /** Creates a signing request from encoded `esr:` uri string. */\n  static from(uri, options = {}) {\n    if (typeof uri !== 'string') {\n      throw new Error('Invalid request uri');\n    }\n    const [, path] = uri.split(':');\n    const data = decode(path.startsWith('//') ? path.slice(2) : path);\n    return SigningRequest.fromData(data, options);\n  }\n  static fromData(data, options = {}) {\n    data = Bytes.from(data);\n    const header = data.array[0];\n    const version = header & ~(1 << 7);\n    if (version !== 2 && version !== 3) {\n      throw new Error('Unsupported protocol version');\n    }\n    let payload = data.droppingFirst(1);\n    if ((header & 1 << 7) !== 0) {\n      if (!options.zlib) {\n        throw new Error('Compressed URI needs zlib');\n      }\n      payload = Bytes.from(options.zlib.inflateRaw(payload.array));\n    }\n    const decoder = new ABIDecoder(payload.array);\n    const req = Serializer.decode({\n      data: decoder,\n      type: this.storageType(version)\n    });\n    let sig;\n    if (decoder.canRead()) {\n      sig = Serializer.decode({\n        data: decoder,\n        type: RequestSignature\n      });\n    }\n    return new SigningRequest(version, req, options.zlib, options.abiProvider, sig);\n  }\n  /**\n   * Sign the request, mutating.\n   * @param signatureProvider The signature provider that provides a signature for the signer.\n   */\n  sign(signatureProvider) {\n    const message = this.getSignatureDigest();\n    this.signature = RequestSignature.from(signatureProvider.sign(message));\n  }\n  /**\n   * Get the signature digest for this request.\n   */\n  getSignatureDigest() {\n    // protocol version + utf8 \"request\"\n    const prefix = [this.version, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74];\n    return Checksum256.hash(Bytes.from(prefix).appending(this.getData()));\n  }\n  /**\n   * Set the signature data for this request, mutating.\n   * @param signer Account name of signer.\n   * @param signature The signature string.\n   */\n  setSignature(signer, signature) {\n    this.signature = RequestSignature.from({\n      signer,\n      signature\n    });\n  }\n  /**\n   * Set the request callback, mutating.\n   * @param url Where the callback should be sent.\n   * @param background Whether the callback should be sent in the background.\n   */\n  setCallback(url, background) {\n    this.data.callback = url;\n    this.data.flags.background = background;\n  }\n  /**\n   * Set broadcast flag.\n   * @param broadcast Whether the transaction should be broadcast by receiver.\n   */\n  setBroadcast(broadcast) {\n    this.data.flags.broadcast = broadcast;\n  }\n  /**\n   * Encode this request into an `esr:` uri.\n   * @argument compress Whether to compress the request data using zlib,\n   *                    defaults to true if omitted and zlib is present;\n   *                    otherwise false.\n   * @argument slashes Whether add slashes after the protocol scheme, i.e. `esr://`.\n   *                   Defaults to true.\n   * @returns An esr uri string.\n   */\n  encode(compress, slashes, scheme = 'esr:') {\n    const shouldCompress = compress !== undefined ? compress : this.zlib !== undefined;\n    if (shouldCompress && this.zlib === undefined) {\n      throw new Error('Need zlib to compress');\n    }\n    let header = this.version;\n    const data = this.getData();\n    const sigData = this.getSignatureData();\n    let array = new Uint8Array(data.byteLength + sigData.byteLength);\n    array.set(data, 0);\n    array.set(sigData, data.byteLength);\n    if (shouldCompress) {\n      const deflated = this.zlib.deflateRaw(array);\n      if (array.byteLength > deflated.byteLength) {\n        header |= 1 << 7;\n        array = deflated;\n      }\n    }\n    const out = new Uint8Array(1 + array.byteLength);\n    out[0] = header;\n    out.set(array, 1);\n    if (slashes !== false) {\n      scheme += '//';\n    }\n    return scheme + encode(out);\n  }\n  /** Get the request data without header or signature. */\n  getData() {\n    return Serializer.encode({\n      object: this.data\n    }).array;\n  }\n  /** Get signature data, returns an empty array if request is not signed. */\n  getSignatureData() {\n    if (!this.signature) {\n      return new Uint8Array(0);\n    }\n    return Serializer.encode({\n      object: this.signature\n    }).array;\n  }\n  /** ABI definitions required to resolve request. */\n  getRequiredAbis() {\n    return this.getRawActions().filter(action => !isIdentity(action)).map(action => action.account).filter((value, index, self) => self.indexOf(value) === index);\n  }\n  /** Whether TaPoS values are required to resolve request. */\n  requiresTapos() {\n    const tx = this.getRawTransaction();\n    return !this.isIdentity() && !hasTapos(tx);\n  }\n  /** Resolve required ABI definitions. */\n  async fetchAbis(abiProvider) {\n    const required = this.getRequiredAbis();\n    if (required.length > 0) {\n      const provider = abiProvider || this.abiProvider;\n      if (!provider) {\n        throw new Error('Missing ABI provider');\n      }\n      const abis = new Map();\n      await Promise.all(required.map(async account => {\n        abis.set(account.toString(), ABI.from(await provider.getAbi(account)));\n      }));\n      return abis;\n    } else {\n      return new Map();\n    }\n  }\n  /**\n   * Decode raw actions actions to object representations.\n   * @param abis ABI defenitions required to decode all actions.\n   * @param signer Placeholders in actions will be resolved to signer if set.\n   */\n  resolveActions(abis, signer) {\n    return this.getRawActions().map(rawAction => {\n      let abi;\n      if (isIdentity(rawAction)) {\n        abi = this.constructor.identityAbi(this.version);\n      } else {\n        const rawAbi = abis.get(rawAction.account.toString());\n        if (!rawAbi) {\n          throw new Error(`Missing ABI definition for ${rawAction.account}`);\n        }\n        abi = ABI.from(rawAbi);\n      }\n      const type = abi.getActionType(rawAction.name);\n      if (!type) {\n        throw new Error(`Missing type for action ${rawAction.account}:${rawAction.name} in ABI`);\n      }\n      let data = rawAction.decodeData(abi);\n      let authorization = rawAction.authorization;\n      if (signer) {\n        const signerPerm = PermissionLevel.from(signer);\n        const resolve = value => {\n          if (value instanceof Name) {\n            if (value.equals(PlaceholderName)) {\n              return signerPerm.actor;\n            } else if (value.equals(PlaceholderPermission)) {\n              return signerPerm.permission;\n            } else {\n              return value;\n            }\n          } else if (Array.isArray(value)) {\n            return value.map(resolve);\n          } else if (typeof value === 'object' && value !== null) {\n            for (const key of Object.keys(value)) {\n              value[key] = resolve(value[key]);\n            }\n            return value;\n          } else {\n            return value;\n          }\n        };\n        data = resolve(data);\n        authorization = authorization.map(auth => {\n          let {\n            actor,\n            permission\n          } = auth;\n          if (actor.equals(PlaceholderName)) {\n            actor = signerPerm.actor;\n          }\n          if (permission.equals(PlaceholderPermission)) {\n            permission = signerPerm.permission;\n          }\n          // backwards compatibility, actor placeholder will also resolve to permission when used in auth\n          if (permission.equals(PlaceholderName)) {\n            permission = signerPerm.permission;\n          }\n          return PermissionLevel.from({\n            actor,\n            permission\n          });\n        });\n      }\n      return {\n        ...rawAction,\n        authorization,\n        data\n      };\n    });\n  }\n  resolveTransaction(abis, signer, ctx = {}) {\n    const tx = this.getRawTransaction();\n    if (!this.isIdentity() && !hasTapos(tx)) {\n      if (ctx.expiration !== undefined && ctx.ref_block_num !== undefined && ctx.ref_block_prefix !== undefined) {\n        tx.expiration = TimePointSec.from(ctx.expiration);\n        tx.ref_block_num = UInt16.from(ctx.ref_block_num, 'truncate');\n        tx.ref_block_prefix = UInt32.from(ctx.ref_block_prefix);\n      } else if (ctx.block_num !== undefined && ctx.ref_block_prefix !== undefined && ctx.timestamp !== undefined) {\n        tx.expiration = expirationTime(ctx.timestamp, ctx.expire_seconds);\n        tx.ref_block_num = UInt16.from(ctx.block_num, 'truncate');\n        tx.ref_block_prefix = UInt32.from(ctx.ref_block_prefix);\n      } else {\n        throw new Error('Invalid transaction context, need either a reference block or explicit TaPoS values');\n      }\n    } else if (this.isIdentity() && this.version > 2) {\n      // From ESR version 3 all identity requests have expiration\n      tx.expiration = ctx.expiration ? TimePointSec.from(ctx.expiration) : expirationTime(ctx.timestamp, ctx.expire_seconds);\n    }\n    const actions = this.resolveActions(abis, signer);\n    // TODO: resolve context free actions\n    const context_free_actions = tx.context_free_actions;\n    return {\n      ...tx,\n      context_free_actions,\n      actions\n    };\n  }\n  resolve(abis, signer, ctx = {}) {\n    const tx = this.resolveTransaction(abis, signer, ctx);\n    const actions = tx.actions.map(action => {\n      let abi;\n      if (isIdentity(action)) {\n        abi = this.constructor.identityAbi(this.version);\n      } else {\n        abi = abis.get(action.account.toString());\n      }\n      if (!abi) {\n        throw new Error(`Missing ABI definition for ${action.account}`);\n      }\n      const type = abi.getActionType(action.name);\n      const data = Serializer.encode({\n        object: action.data,\n        type,\n        abi\n      });\n      return Action.from({\n        ...action,\n        data\n      });\n    });\n    const transaction = Transaction.from({\n      ...tx,\n      actions\n    });\n    let chainId;\n    if (this.isMultiChain()) {\n      if (!ctx.chainId) {\n        throw new Error('Missing chosen chain ID for multi-chain request');\n      }\n      chainId = ChainId.from(ctx.chainId);\n      const ids = this.getChainIds();\n      if (ids && !ids.some(id => chainId.equals(id))) {\n        throw new Error('Trying to resolve for chain ID not defined in request');\n      }\n    } else {\n      chainId = this.getChainId();\n    }\n    return new ResolvedSigningRequest(this, PermissionLevel.from(signer), transaction, tx, chainId);\n  }\n  /**\n   * Get the id of the chain where this request is valid.\n   * @returns The 32-byte chain id as hex encoded string.\n   */\n  getChainId() {\n    return this.data.chain_id.chainId;\n  }\n  /**\n   * Chain IDs this request is valid for, only valid for multi chain requests. Value of `null` when `isMultiChain` is true denotes any chain.\n   */\n  getChainIds() {\n    if (!this.isMultiChain()) {\n      return null;\n    }\n    const ids = this.getInfoKey('chain_ids', {\n      type: ChainIdVariant,\n      array: true\n    });\n    if (ids) {\n      return ids.map(id => id.chainId);\n    }\n    return null;\n  }\n  /**\n   * Set chain IDs this request is valid for, only considered for multi chain requests.\n   */\n  setChainIds(ids) {\n    const value = ids.map(id => ChainId.from(id).chainVariant);\n    this.setInfoKey('chain_ids', value, {\n      type: ChainIdVariant,\n      array: true\n    });\n  }\n  /**\n   * True if chainId is set to chain alias `0` which indicates that the request is valid for any chain.\n   */\n  isMultiChain() {\n    return this.data.chain_id.variantIdx === 0 && this.data.chain_id.value.equals(ChainName.UNKNOWN);\n  }\n  /** Return the actions in this request with action data encoded. */\n  getRawActions() {\n    const req = this.data.req;\n    switch (req.variantName) {\n      case 'action':\n        return [req.value];\n      case 'action[]':\n        return req.value;\n      case 'identity':\n        {\n          if (this.version === 2) {\n            const id = req.value;\n            let data = '0101000000000000000200000000000000'; // placeholder permission\n            let authorization = [PlaceholderAuth];\n            if (id.permission) {\n              data = Serializer.encode({\n                object: id\n              });\n              authorization = [id.permission];\n            }\n            const action = Action.from({\n              account: '',\n              name: 'identity',\n              authorization,\n              data\n            });\n            // TODO: The way payloads are encoded is including the ABI, which isn't what we want\n            // This needs to be resolved in wharfkit/antelope, and then the delete call here should be removed\n            delete action.abi;\n            return [action];\n          } else {\n            // eslint-disable-next-line prefer-const\n            let {\n              scope,\n              permission\n            } = req.value;\n            if (!permission) {\n              permission = PlaceholderAuth;\n            }\n            const data = Serializer.encode({\n              object: {\n                scope,\n                permission\n              },\n              type: IdentityV3\n            });\n            const action = Action.from({\n              account: '',\n              name: 'identity',\n              authorization: [permission],\n              data\n            });\n            // TODO: The way payloads are encoded is including the ABI, which isn't what we want\n            // This needs to be resolved in wharfkit/antelope, and then the delete call here should be removed\n            delete action.abi;\n            return [action];\n          }\n        }\n      case 'transaction':\n        return req.value.actions;\n      default:\n        throw new Error('Invalid signing request data');\n    }\n  }\n  /** Unresolved transaction. */\n  getRawTransaction() {\n    const req = this.data.req;\n    switch (req.variantName) {\n      case 'transaction':\n        return Transaction.from({\n          ...req.value\n        });\n      case 'action':\n      case 'action[]':\n      case 'identity':\n        return Transaction.from({\n          actions: this.getRawActions(),\n          context_free_actions: [],\n          transaction_extensions: [],\n          expiration: '1970-01-01T00:00:00.000',\n          ref_block_num: 0,\n          ref_block_prefix: 0,\n          max_cpu_usage_ms: 0,\n          max_net_usage_words: 0,\n          delay_sec: 0\n        });\n      default:\n        throw new Error('Invalid signing request data');\n    }\n  }\n  /** Whether the request is an identity request. */\n  isIdentity() {\n    return this.data.req.variantName === 'identity';\n  }\n  /** Whether the request should be broadcast by signer. */\n  shouldBroadcast() {\n    if (this.isIdentity()) {\n      return false;\n    }\n    return this.data.flags.broadcast;\n  }\n  /**\n   * Present if the request is an identity request and requests a specific account.\n   * @note This returns `nil` unless a specific identity has been requested,\n   *       use `isIdentity` to check id requests.\n   */\n  getIdentity() {\n    if (!this.isIdentity()) {\n      return null;\n    }\n    const id = this.data.req.value;\n    if (id.permission && !id.permission.actor.equals(PlaceholderName)) {\n      return id.permission.actor;\n    }\n    return null;\n  }\n  /**\n   * Present if the request is an identity request and requests a specific permission.\n   * @note This returns `nil` unless a specific permission has been requested,\n   *       use `isIdentity` to check id requests.\n   */\n  getIdentityPermission() {\n    if (!this.isIdentity()) {\n      return null;\n    }\n    const id = this.data.req.value;\n    if (id.permission && !id.permission.permission.equals(PlaceholderPermission)) {\n      return id.permission.permission;\n    }\n    return null;\n  }\n  /**\n   * Present if the request is an identity request and requests a specific permission.\n   * @note This returns `nil` unless a specific permission has been requested,\n   *       use `isIdentity` to check id requests.\n   */\n  getIdentityScope() {\n    if (!this.isIdentity() || this.version <= 2) {\n      return null;\n    }\n    const id = this.data.req.value;\n    return id.scope;\n  }\n  /** Get raw info dict */\n  getRawInfo() {\n    const rv = {};\n    for (const {\n      key,\n      value\n    } of this.data.info) {\n      rv[key] = value;\n    }\n    return rv;\n  }\n  getRawInfoKey(key) {\n    const pair = this.data.info.find(pair => pair.key === key);\n    if (pair) {\n      return pair.value;\n    }\n  }\n  setRawInfoKey(key, value) {\n    let pair = this.data.info.find(pair => pair.key === key);\n    if (!pair) {\n      pair = InfoPair.from({\n        key,\n        value\n      });\n      this.data.info.push(pair);\n    } else {\n      pair.value = Bytes.from(value);\n    }\n  }\n  /** Set a metadata key. */\n  setInfoKey(key, object, type) {\n    let data;\n    if (typeof object === 'string' && !type) {\n      // match old behavior where strings encode to raw utf8 as opposed to\n      // eosio-abi encoded strings (varuint32 length prefix + utf8 bytes)\n      data = Bytes.from(object, 'utf8');\n    } else {\n      data = Serializer.encode({\n        object,\n        type\n      });\n    }\n    this.setRawInfoKey(key, data);\n  }\n  getInfoKey(key, type) {\n    const data = this.getRawInfoKey(key);\n    if (data) {\n      if (type) {\n        return Serializer.decode({\n          data,\n          type\n        });\n      } else {\n        // assume utf8 string if no type is given\n        return data.utf8String;\n      }\n    }\n  }\n  /** Return a deep copy of this request. */\n  clone() {\n    let signature;\n    if (this.signature) {\n      signature = RequestSignature.from(JSON.parse(JSON.stringify(this.signature)));\n    }\n    const RequestData = this.constructor.storageType(this.version);\n    const data = RequestData.from(JSON.parse(JSON.stringify(this.data)));\n    return new SigningRequest(this.version, data, this.zlib, this.abiProvider, signature);\n  }\n  // Convenience methods.\n  toString() {\n    return this.encode();\n  }\n  toJSON() {\n    return this.encode();\n  }\n}\nclass ResolvedSigningRequest {\n  constructor(request, signer, transaction, resolvedTransaction, chainId) {\n    this.request = request;\n    this.signer = signer;\n    this.transaction = transaction;\n    this.resolvedTransaction = resolvedTransaction;\n    this.chainId = chainId;\n  }\n  /** Recreate a resolved request from a callback payload. */\n  static async fromPayload(payload, options = {}) {\n    const request = SigningRequest.from(payload.req, options);\n    const abis = await request.fetchAbis();\n    return request.resolve(abis, {\n      actor: payload.sa,\n      permission: payload.sp\n    }, {\n      ref_block_num: payload.rbn,\n      ref_block_prefix: payload.rid,\n      expiration: payload.ex,\n      chainId: payload.cid || request.getChainId()\n    });\n  }\n  get serializedTransaction() {\n    return Serializer.encode({\n      object: this.transaction\n    }).array;\n  }\n  get signingDigest() {\n    return this.transaction.signingDigest(this.chainId);\n  }\n  get signingData() {\n    return this.transaction.signingData(this.chainId);\n  }\n  getCallback(signatures, blockNum) {\n    const {\n      callback,\n      flags\n    } = this.request.data;\n    if (!callback || callback.length === 0) {\n      return null;\n    }\n    if (!signatures || signatures.length === 0) {\n      throw new Error('Must have at least one signature to resolve callback');\n    }\n    const sigs = signatures.map(sig => Signature.from(sig));\n    const payload = {\n      sig: String(sigs[0]),\n      tx: String(this.transaction.id),\n      rbn: String(this.transaction.ref_block_num),\n      rid: String(this.transaction.ref_block_prefix),\n      ex: String(this.transaction.expiration),\n      req: this.request.encode(),\n      sa: String(this.signer.actor),\n      sp: String(this.signer.permission),\n      cid: String(this.chainId)\n    };\n    for (const [n, sig] of sigs.slice(1).entries()) {\n      payload[`sig${n}`] = String(sig);\n    }\n    if (blockNum) {\n      payload.bn = String(UInt32.from(blockNum));\n    }\n    const url = callback.replace(/({{([a-z0-9]+)}})/g, (_1, _2, m) => {\n      return payload[m] || '';\n    });\n    return {\n      background: flags.background,\n      payload,\n      url\n    };\n  }\n  getIdentityProof(signature) {\n    if (!this.request.isIdentity()) {\n      throw new Error('Not a identity request');\n    }\n    return IdentityProof.from({\n      chainId: this.chainId,\n      scope: this.request.getIdentityScope(),\n      expiration: this.transaction.expiration,\n      signer: this.signer,\n      signature\n    });\n  }\n}\nfunction encodeAction(action, abis) {\n  if (Bytes.isBytes(action.data) || action.data.constructor.abiName !== undefined) {\n    return Action.from(action);\n  }\n  const abi = abis[String(Name.from(action.account))];\n  if (!abi) {\n    throw new Error(`Missing ABI for ${action.account}`);\n  }\n  const data = Action.from(action, abi);\n  // TODO: The way payloads are encoded is including the ABI, which isn't what we want\n  // This needs to be resolved in wharfkit/antelope, and then the delete call here should be removed\n  delete data.abi;\n  return data;\n}\nfunction isIdentity(action) {\n  const account = Name.from(action.account);\n  const name = Name.from(action.name);\n  return account.rawValue.equals(0) && name.equals('identity');\n}\nfunction hasTapos(tx) {\n  return !(tx.expiration.equals(0) && tx.ref_block_num.equals(0) && tx.ref_block_prefix.equals(0));\n}\nfunction expirationTime(timestamp, expireSeconds = 60) {\n  const ts = TimePointSec.from(timestamp || new Date());\n  const exp = UInt32.from(expireSeconds);\n  return TimePointSec.fromInteger(ts.value.adding(exp));\n}\nexport { AccountName, base64u as Base64u, ChainAlias, ChainId, ChainIdVariant, ChainName, IdentityProof, IdentityV2, IdentityV3, InfoPair, PermissionName, PlaceholderAuth, PlaceholderName, PlaceholderPermission, ProtocolVersion, RequestDataV2, RequestDataV3, RequestFlags, RequestSignature, RequestVariantV2, RequestVariantV3, ResolvedSigningRequest, SigningRequest };\n", "import { ABI } from '@wharfkit/antelope';\nclass ABICache {\n  constructor(client) {\n    this.client = client;\n    this.cache = new Map();\n    this.pending = new Map();\n  }\n  async getAbi(account) {\n    const key = String(account);\n    let record = this.cache.get(key);\n    if (!record) {\n      let getAbi = this.pending.get(key);\n      if (!getAbi) {\n        getAbi = this.client.v1.chain.get_raw_abi(account);\n        this.pending.set(key, getAbi);\n      }\n      const response = await getAbi;\n      this.pending.delete(key);\n      if (response.abi) {\n        record = ABI.from(response.abi);\n        this.cache.set(key, record);\n      } else {\n        throw new Error(`ABI for ${key} could not be loaded.`);\n      }\n    }\n    return record;\n  }\n  setAbi(account, abiDef, merge = false) {\n    const key = String(account);\n    const abi = ABI.from(abiDef);\n    const existing = this.cache.get(key);\n    if (merge && existing) {\n      this.cache.set(key, ABI.from({\n        action_results: mergeAndDeduplicate(existing.action_results, abi.action_results),\n        types: mergeAndDeduplicate(existing.types, abi.types, 'new_type_name'),\n        structs: mergeAndDeduplicate(existing.structs, abi.structs),\n        actions: mergeAndDeduplicate(existing.actions, abi.actions),\n        tables: mergeAndDeduplicate(existing.tables, abi.tables),\n        ricardian_clauses: mergeAndDeduplicate(existing.ricardian_clauses, abi.ricardian_clauses, 'id'),\n        variants: mergeAndDeduplicate(existing.variants, abi.variants),\n        version: abi.version\n      }));\n    } else {\n      this.cache.set(key, abi);\n    }\n  }\n}\nfunction mergeAndDeduplicate(array1, array2, byField = 'name') {\n  return array2.reduce((acc, current) => {\n    if (!acc.some(obj => String(obj[byField]) === String(current[byField]))) {\n      acc.push(current);\n    }\n    return acc;\n  }, array1.slice());\n}\nexport { ABICache, ABICache as default };\n"],
  "mappings": "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",
  "names": ["ChainName", "ChainId", "ChainAlias", "ChainIdVariant", "AccountName", "PermissionName", "IdentityV2", "IdentityV3", "RequestVariantV2", "RequestVariantV3", "RequestFlags", "InfoPair", "RequestDataV2", "RequestDataV3", "RequestSignature", "IdentityProof", "encode", "pair"]
}
